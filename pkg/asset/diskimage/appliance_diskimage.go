package diskimage

import (
	"github.com/danielerez/openshift-appliance/pkg/asset/iso"
	"github.com/openshift/installer/pkg/asset"
	"github.com/sirupsen/logrus"
)

// ApplianceDiskImage is an asset that generates the OpenShift-based appliance.
type ApplianceDiskImage struct {
	File *asset.File
}

var _ asset.WritableAsset = (*ApplianceDiskImage)(nil)

// Dependencies returns the assets on which the Bootstrap asset depends.
func (a *ApplianceDiskImage) Dependencies() []asset.Asset {
	return []asset.Asset{
		&iso.RecoveryISO{},
		&BaseDiskImage{},
	}
}

// Generate generates the image file for to ISO asset.
func (a *ApplianceDiskImage) Generate(dependencies asset.Parents) error {
	logrus.Info("Generating appliance disk image...")

	return nil
}

// Name returns the human-friendly name of the asset.
func (a *ApplianceDiskImage) Name() string {
	return "Appliance disk image"
}

// Load returns the ISO from disk.
func (a *ApplianceDiskImage) Load(f asset.FileFetcher) (bool, error) {
	// The ISO will not be needed by another asset so load is noop.
	// This is implemented because it is required by WritableAsset
	return false, nil
}

// Files returns the files generated by the asset.
func (i *ApplianceDiskImage) Files() []*asset.File {
	if i.File != nil {
		return []*asset.File{i.File}
	}
	return []*asset.File{}
}
